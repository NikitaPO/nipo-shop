{"version":3,"sources":["components/Footer.js","components/Header.js","actions/userActions.js","constans/userConstans.js","actions/cartActions.js","constans/cartConstans.js","components/Message.js","screens/CartScreen.js","components/Rating.js","components/Product.js","components/Loader.js","screens/HomeScreen.js","actions/productsActions.js","constans/productConstans.js","components/FormContainer.js","screens/LoginScreen.js","screens/ProductScreen.js","screens/RegisterScreen.js","App.js","store.js","reducers/productsRedusers.js","reducers/cartReducers.js","reducers/userReducers.js","serviceWorker.js","index.js"],"names":["Footer","Container","Row","Col","className","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","console","log","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","to","Brand","Collapse","id","Nav","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","type","addToCart","quantity","getState","axios","get","data","payload","product","_id","image","price","countInStock","setItem","JSON","stringify","cart","cartItems","Message","children","Alert","defaultProps","CartScreen","match","location","history","productId","params","search","split","removeHandler","removeFromCart","useEffect","sm","lg","length","ListGroup","map","item","key","Image","src","alt","fluid","Form","Control","as","value","onChange","e","target","Array","keys","Button","reduce","acc","toFixed","disabled","push","borders","fill","elem","index","Rating","text","color","border","style","Product","Card","Img","description","rating","numReviews","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","productList","loading","error","products","response","message","xl","md","FormContainer","xs","LoginScreen","useState","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","fetch","method","headers","body","then","x","json","login","Group","controlId","Label","placeholder","ProductScreen","isInStock","setQuantity","productDetails","items","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","config","post","register","App","path","component","exact","reducer","combineReducers","action","reviews","existItem","find","filter","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4d121dbf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Nipo</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  let userInfo = userLogin.userInfo;\n  console.log(userInfo);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          <LinkContainer to=\"/\" className=\"mr-auto\">\n            <Navbar.Brand>NIPO</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/about\">\n                <div className=\"nav-link\">\n                  <i className=\"fas fa-info-circle\"></i>About\n                </div>\n              </LinkContainer>\n\n              <LinkContainer to=\"/cart\">\n                <div className=\"nav-link\">\n                  <i className=\"fas fa-shopping-cart mr-1\"></i>Cart\n                </div>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <div className=\"nav-link\">\n                    <i className=\"fas fa-user mr-1\"></i>Sing In\n                  </div>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from \"../constans/userConstans\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const data = await fetch(\"/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((x) => x.json());\n\n    if (data) {\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    }\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n","import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constans/cartConstans\";\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      quantity,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React, { useEffect } from \"react\";\nimport { Button, Col, Form, Image, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport Message from \"../components/Message\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n  const dispatch = useDispatch();\n  const quantity = location.search ? +location.search.split(\"=\")[1] : 1;\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  const checkoutHandler = () => {\n    history.push(`/login?redirect=shipping`);\n  };\n\n  const removeHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, quantity));\n    }\n  }, [dispatch, productId, quantity]);\n\n  return (\n    <Row>\n      <Col sm={12} lg={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length > 0 ? (\n          <ListGroup>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.name}>\n                <Row>\n                  <Col sm={2} lg={2}>\n                    <Image src={item.image} alt={item.name} fluid />\n                  </Col>\n                  <Col sm={4} lg={4}>\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col sm={2} lg={2}>\n                    {\"$\" + item.price}\n                  </Col>\n                  <Col sm={2} lg={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.quantity}\n                      onChange={(e) =>\n                        dispatch(addToCart(item.product, e.target.value))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((e) => (\n                        <option key={e + 1} value={e + 1}>\n                          {e + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col sm={2} lg={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={() => removeHandler(item.product)}\n                    >\n                      <i className=\"fa fa-trash\" />\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        ) : (\n          <Message>\n            Your cart is empty, <Link to=\"/\">go back</Link>\n          </Message>\n        )}\n      </Col>\n      <Col sm={12} lg={4}>\n        <ListGroup>\n          <ListGroup.Item>\n            <h2>{`Subtotal (${cartItems.reduce(\n              (acc, item) => acc + +item.quantity,\n              0\n            )}) items`}</h2>\n          </ListGroup.Item>\n          <ListGroup.Item>\n            Total price:\n            <b>\n              {\" $\"}\n              {cartItems\n                .reduce((acc, item) => acc + +item.quantity * +item.price, 0)\n                .toFixed(2)}\n            </b>\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems === 0}\n              onClick={checkoutHandler}\n            >\n              Go to checkout\n            </Button>\n          </ListGroup.Item>\n        </ListGroup>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nlet borders = Array(5)\n  .fill()\n  .map((elem, index) => [index + 0.5, index + 1]);\n\nconst Rating = ({ value, text, color }) => (\n  <div>\n    {borders.map((border, index) => (\n      <i\n        key={index}\n        style={{ color }}\n        className={\n          value >= border[1]\n            ? \"fas fa-star\"\n            : value >= border[0]\n            ? \"fas fa-star-half-alt\"\n            : \"far fa-star\"\n        }\n      ></i>\n    ))}\n    <span className=\"pl-2\">{text ? text : \"\"}</span>\n  </div>\n);\n\nRating.defaultProps = { value: 0, color: \"#f8e825\" };\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Rating;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"card text-white bg-primary mb-3 rounded\">\n      <Link to={`/products/${product._id}`}>\n        <div className=\"card-header\">{product.name}</div>\n        <Card.Img src={product.image} variant=\"top\" />\n        <div className=\"card-body\">\n          <p className=\"card-text\">{product.description}</p>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n          <h4 className=\"card-title mt-2\">${product.price}</h4>\n        </div>\n      </Link>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"staus\"\n      variant=\"light\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"50px auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { listProducts } from \"../actions/productsActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"mb-3\">Latest products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product, index) => (\n            <Col xl={3} lg={4} md={6} sm={12} key={product._id}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import axios from \"axios\";\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n} from \"../constans/productConstans\";\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(\"/api/products\");\n\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductsDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>E-mail:</Form.Label>\n              <Form.Control\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                placeholder=\"Enter password\"\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\n              Sign in\n            </Button>\n          </Form>\n          <Row>\n            <Col>\n              New customer?&nbsp;&nbsp;\n              <Link\n                to={redirect ? `register?redirect=${redirect}` : \"/register\"}\n              >\n                Register\n              </Link>\n            </Col>\n          </Row>\n        </>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Col, Form, Image, ListGroup, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"../components/Rating\";\nimport { listProductsDetails } from \"../actions/productsActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst ProductScreen = ({ match, history }) => {\n  const [quantity, setQuantity] = useState(1);\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, product, error } = productDetails;\n  let isInStock;\n  if (product) isInStock = product.countInStock > 0;\n  let items = 5;\n  if (product.countInStock < 5) {\n    items = product.countInStock;\n  }\n\n  const addToCardHandler = () => {\n    history.push(`/cart/${match.params.id}?quantity=${quantity}`);\n  };\n\n  useEffect(() => {\n    dispatch(listProductsDetails(match.params.id));\n  }, [match, dispatch]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row className=\"my-3\">\n          <Col md={6} lg={6}>\n            <Link type=\"button\" className=\"btn btn-primary mb-3\" to=\"/\">\n              Go back\n            </Link>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={6} lg={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Status:{\" \"}\n                {isInStock ? (\n                  <span className=\"text-success\">In stock</span>\n                ) : (\n                  <span className=\"text-danger\">Out of stock</span>\n                )}\n              </ListGroup.Item>\n              <ListGroup.Item>{product.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={6} lg={3}>\n            <ListGroup.Item>\n              Price: <b>${product.price}</b>\n            </ListGroup.Item>\n\n            {isInStock && (\n              <ListGroup.Item>\n                <Row>\n                  <Col>Quantity: </Col>\n                  <Col>\n                    <Form.Control\n                      as=\"select\"\n                      value={quantity}\n                      onChange={(e) => setQuantity(e.target.value)}\n                    >\n                      {[...Array(items).keys()].map((e) => (\n                        <option key={e + 1} value={e + 1}>\n                          {e + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            )}\n            <Button\n              onClick={addToCardHandler}\n              className={\"btn-block btn-success\"}\n              disabled={!isInStock}\n            >\n              Add to card\n            </Button>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { register } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      setMessage(null);\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sing Up</h1>\n\n      {message ? (\n        <Message variant=\"danger\">{message}</Message>\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : null}\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={(e) => setName(e.target.value)}\n                value={name}\n                placeholder=\"Enter name\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>E-mail:</Form.Label>\n              <Form.Control\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                placeholder=\"Enter password\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                value={confirmPassword}\n                placeholder=\"Confirm password\"\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\n              Register\n            </Button>\n\n            <Row>\n              <Col>\n                Have an account?&nbsp;&nbsp;\n                <Link to={redirect ? `login?redirect=${redirect}` : \"/login\"}>\n                  Login\n                </Link>\n              </Col>\n            </Row>\n          </Form>\n        </>\n      )}\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport CartScreen from \"./screens/CartScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/products/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productDetailsReduser,\n  productListReduser,\n} from \"./reducers/productsRedusers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReduser,\n  productDetails: productDetailsReduser,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  cartItems: { cartItems: cartItemsFromStorage },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n} from \"../constans/productConstans\";\n\nexport const productListReduser = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReduser = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, product: [] };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constans/cartConstans\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from \"../constans/userConstans\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}